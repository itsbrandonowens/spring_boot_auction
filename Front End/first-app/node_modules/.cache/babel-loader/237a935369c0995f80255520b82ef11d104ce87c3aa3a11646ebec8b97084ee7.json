{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brand\\\\Downloads\\\\Work Stuff\\\\Final Project\\\\Front End\\\\first-app\\\\src\\\\components\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterAcademy = () => {\n  _s();\n  const api = \"http://localhost:8088/api/v1/academy/\";\n  const navigate = useNavigate();\n  const [username, setUserame] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidUsername, setInvalidUserame] = useState(false);\n  const [invalidPassword, setInvalidPassword] = useState(false);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (username === \"\" && password === \"\") {\n      setInvalidUserame(true);\n      setInvalidPassword(true);\n    } else if (username == \"\") {\n      setInvalidUserame(true);\n    } else if (password == \"\") {\n      setInvalidPassword(true);\n    } else {\n      axios.post(api, {\n        username: username,\n        password: password\n      }).then(navigate('/page1'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerAcademyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Enter your login details!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          value: name,\n          onChange: event => setName(event.target.value),\n          placeholder: \"Enter username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), invalidName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Username cannot be blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 93\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          class: \"form-control\",\n          placeholder: \"Password\",\n          name: \"address\",\n          value: address,\n          onChange: event => setAddress(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), invalidAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: \"Password cannot be blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 96\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterAcademy, \"fnQb09ih2qAJvrrfNtlIquwL82s=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterAcademy;\nexport default RegisterAcademy;\nvar _c;\n$RefreshReg$(_c, \"RegisterAcademy\");","map":{"version":3,"names":["axios","useState","useNavigate","RegisterAcademy","api","navigate","username","setUserame","password","setPassword","invalidUsername","setInvalidUserame","invalidPassword","setInvalidPassword","handleSubmit","event","preventDefault","post","then","name","setName","target","value","invalidName","address","setAddress","invalidAddress"],"sources":["C:/Users/brand/Downloads/Work Stuff/Final Project/Front End/first-app/src/components/LoginPage.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport '../styles/LoginPage.css'\r\n\r\nconst RegisterAcademy = () => {\r\n\r\n    const api = \"http://localhost:8088/api/v1/academy/\"\r\n    const navigate = useNavigate()\r\n    const [username, setUserame] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [invalidUsername, setInvalidUserame] = useState(false)\r\n    const [invalidPassword, setInvalidPassword] = useState(false)\r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (username === \"\" && password === \"\"){\r\n            setInvalidUserame(true)\r\n            setInvalidPassword(true)\r\n        } else if(username == \"\") {\r\n            setInvalidUserame(true) \r\n        } else if (password == \"\"){\r\n            setInvalidPassword(true)\r\n        } else{\r\n            axios.post(api,\r\n                {\r\n                   username : username,\r\n                   password : password,\r\n                   \r\n                })\r\n                .then(navigate('/page1'))\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"registerAcademyForm\">\r\n            <br/>\r\n            <h2> Enter your login details!</h2>\r\n            <br/>\r\n            <form onSubmit={handleSubmit}>\r\n                <div class=\"form-group\" >\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" class=\"form-control\" value={name} onChange={event => setName(event.target.value)}  placeholder=\"Enter username\"/>\r\n                    {invalidName && <span className=\"error\">Username cannot be blank</span>}<br/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" name=\"address\" value={address} onChange={event => setAddress(event.target.value)} />\r\n                    {invalidAddress && <span className=\"error\">Password cannot be blank</span>}<br />\r\n                </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterAcademy"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}